
package local.charles.module.ws;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AntiMalwareTransport complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AntiMalwareTransport">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:Manager}ConfigurationTransport">
 *       &lt;sequence>
 *         &lt;element name="alert" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="excludeScanDirectoryListID" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="excludeScanFileExtListID" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="excludeScanFileListID" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="fileToScan" type="{urn:Manager}EnumAntiMalwareFilesToScan"/>
 *         &lt;element name="firstScanAction" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="folderToScan" type="{urn:Manager}EnumAntiMalwareFoldersToScan"/>
 *         &lt;element name="scanAction" type="{urn:Manager}EnumAntiMalwareScanAction"/>
 *         &lt;element name="intelliTrapEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="scanCompressed" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="scanCompressedLayer" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="scanCompressedSmaller" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="scanCompressedNumberOfFiles" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="scanDirList" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="scanFilesActivity" type="{urn:Manager}EnumAntiMalwareScanFilesActivity"/>
 *         &lt;element name="secondScanAction" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="toScanFileExtListID" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="spywareEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="scanCustomActionForGeneric" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="unScannableFileAction" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="configurationType" type="{urn:Manager}EnumAntiMalwareConfigType"/>
 *         &lt;element name="scanNetworkFolder" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="cpuUsage" type="{urn:Manager}EnumAntiMalwareCpuUsage"/>
 *         &lt;element name="scanOLE" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="scanOLEExploit" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="scanOLELayer" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="scanActionForVirus" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="scanActionForTrojans" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="scanActionForPacker" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="scanActionForSpyware" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="scanActionForOtherThreats" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="scanActionForCookie" type="{urn:Manager}EnumAntiMalwareScanCustomAction"/>
 *         &lt;element name="excludeScanProcessFileListID" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AntiMalwareTransport", propOrder = {
    "alert",
    "excludeScanDirectoryListID",
    "excludeScanFileExtListID",
    "excludeScanFileListID",
    "fileToScan",
    "firstScanAction",
    "folderToScan",
    "scanAction",
    "intelliTrapEnabled",
    "scanCompressed",
    "scanCompressedLayer",
    "scanCompressedSmaller",
    "scanCompressedNumberOfFiles",
    "scanDirList",
    "scanFilesActivity",
    "secondScanAction",
    "toScanFileExtListID",
    "spywareEnabled",
    "scanCustomActionForGeneric",
    "unScannableFileAction",
    "configurationType",
    "scanNetworkFolder",
    "cpuUsage",
    "scanOLE",
    "scanOLEExploit",
    "scanOLELayer",
    "scanActionForVirus",
    "scanActionForTrojans",
    "scanActionForPacker",
    "scanActionForSpyware",
    "scanActionForOtherThreats",
    "scanActionForCookie",
    "excludeScanProcessFileListID"
})
public class AntiMalwareTransport
    extends ConfigurationTransport
{

    protected boolean alert;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer excludeScanDirectoryListID;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer excludeScanFileExtListID;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer excludeScanFileListID;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareFilesToScan fileToScan;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction firstScanAction;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareFoldersToScan folderToScan;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanAction scanAction;
    protected boolean intelliTrapEnabled;
    protected boolean scanCompressed;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer scanCompressedLayer;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer scanCompressedSmaller;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer scanCompressedNumberOfFiles;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer scanDirList;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanFilesActivity scanFilesActivity;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction secondScanAction;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer toScanFileExtListID;
    protected boolean spywareEnabled;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanCustomActionForGeneric;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction unScannableFileAction;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareConfigType configurationType;
    protected boolean scanNetworkFolder;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareCpuUsage cpuUsage;
    protected boolean scanOLE;
    protected boolean scanOLEExploit;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer scanOLELayer;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanActionForVirus;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanActionForTrojans;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanActionForPacker;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanActionForSpyware;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanActionForOtherThreats;
    @XmlElement(required = true, nillable = true)
    protected EnumAntiMalwareScanCustomAction scanActionForCookie;
    @XmlElement(required = true, type = Integer.class, nillable = true)
    protected Integer excludeScanProcessFileListID;

    /**
     * Gets the value of the alert property.
     * 
     */
    public boolean isAlert() {
        return alert;
    }

    /**
     * Sets the value of the alert property.
     * 
     */
    public void setAlert(boolean value) {
        this.alert = value;
    }

    /**
     * Gets the value of the excludeScanDirectoryListID property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getExcludeScanDirectoryListID() {
        return excludeScanDirectoryListID;
    }

    /**
     * Sets the value of the excludeScanDirectoryListID property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setExcludeScanDirectoryListID(Integer value) {
        this.excludeScanDirectoryListID = value;
    }

    /**
     * Gets the value of the excludeScanFileExtListID property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getExcludeScanFileExtListID() {
        return excludeScanFileExtListID;
    }

    /**
     * Sets the value of the excludeScanFileExtListID property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setExcludeScanFileExtListID(Integer value) {
        this.excludeScanFileExtListID = value;
    }

    /**
     * Gets the value of the excludeScanFileListID property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getExcludeScanFileListID() {
        return excludeScanFileListID;
    }

    /**
     * Sets the value of the excludeScanFileListID property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setExcludeScanFileListID(Integer value) {
        this.excludeScanFileListID = value;
    }

    /**
     * Gets the value of the fileToScan property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareFilesToScan }
     *     
     */
    public EnumAntiMalwareFilesToScan getFileToScan() {
        return fileToScan;
    }

    /**
     * Sets the value of the fileToScan property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareFilesToScan }
     *     
     */
    public void setFileToScan(EnumAntiMalwareFilesToScan value) {
        this.fileToScan = value;
    }

    /**
     * Gets the value of the firstScanAction property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getFirstScanAction() {
        return firstScanAction;
    }

    /**
     * Sets the value of the firstScanAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setFirstScanAction(EnumAntiMalwareScanCustomAction value) {
        this.firstScanAction = value;
    }

    /**
     * Gets the value of the folderToScan property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareFoldersToScan }
     *     
     */
    public EnumAntiMalwareFoldersToScan getFolderToScan() {
        return folderToScan;
    }

    /**
     * Sets the value of the folderToScan property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareFoldersToScan }
     *     
     */
    public void setFolderToScan(EnumAntiMalwareFoldersToScan value) {
        this.folderToScan = value;
    }

    /**
     * Gets the value of the scanAction property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanAction }
     *     
     */
    public EnumAntiMalwareScanAction getScanAction() {
        return scanAction;
    }

    /**
     * Sets the value of the scanAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanAction }
     *     
     */
    public void setScanAction(EnumAntiMalwareScanAction value) {
        this.scanAction = value;
    }

    /**
     * Gets the value of the intelliTrapEnabled property.
     * 
     */
    public boolean isIntelliTrapEnabled() {
        return intelliTrapEnabled;
    }

    /**
     * Sets the value of the intelliTrapEnabled property.
     * 
     */
    public void setIntelliTrapEnabled(boolean value) {
        this.intelliTrapEnabled = value;
    }

    /**
     * Gets the value of the scanCompressed property.
     * 
     */
    public boolean isScanCompressed() {
        return scanCompressed;
    }

    /**
     * Sets the value of the scanCompressed property.
     * 
     */
    public void setScanCompressed(boolean value) {
        this.scanCompressed = value;
    }

    /**
     * Gets the value of the scanCompressedLayer property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getScanCompressedLayer() {
        return scanCompressedLayer;
    }

    /**
     * Sets the value of the scanCompressedLayer property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setScanCompressedLayer(Integer value) {
        this.scanCompressedLayer = value;
    }

    /**
     * Gets the value of the scanCompressedSmaller property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getScanCompressedSmaller() {
        return scanCompressedSmaller;
    }

    /**
     * Sets the value of the scanCompressedSmaller property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setScanCompressedSmaller(Integer value) {
        this.scanCompressedSmaller = value;
    }

    /**
     * Gets the value of the scanCompressedNumberOfFiles property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getScanCompressedNumberOfFiles() {
        return scanCompressedNumberOfFiles;
    }

    /**
     * Sets the value of the scanCompressedNumberOfFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setScanCompressedNumberOfFiles(Integer value) {
        this.scanCompressedNumberOfFiles = value;
    }

    /**
     * Gets the value of the scanDirList property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getScanDirList() {
        return scanDirList;
    }

    /**
     * Sets the value of the scanDirList property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setScanDirList(Integer value) {
        this.scanDirList = value;
    }

    /**
     * Gets the value of the scanFilesActivity property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanFilesActivity }
     *     
     */
    public EnumAntiMalwareScanFilesActivity getScanFilesActivity() {
        return scanFilesActivity;
    }

    /**
     * Sets the value of the scanFilesActivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanFilesActivity }
     *     
     */
    public void setScanFilesActivity(EnumAntiMalwareScanFilesActivity value) {
        this.scanFilesActivity = value;
    }

    /**
     * Gets the value of the secondScanAction property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getSecondScanAction() {
        return secondScanAction;
    }

    /**
     * Sets the value of the secondScanAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setSecondScanAction(EnumAntiMalwareScanCustomAction value) {
        this.secondScanAction = value;
    }

    /**
     * Gets the value of the toScanFileExtListID property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getToScanFileExtListID() {
        return toScanFileExtListID;
    }

    /**
     * Sets the value of the toScanFileExtListID property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setToScanFileExtListID(Integer value) {
        this.toScanFileExtListID = value;
    }

    /**
     * Gets the value of the spywareEnabled property.
     * 
     */
    public boolean isSpywareEnabled() {
        return spywareEnabled;
    }

    /**
     * Sets the value of the spywareEnabled property.
     * 
     */
    public void setSpywareEnabled(boolean value) {
        this.spywareEnabled = value;
    }

    /**
     * Gets the value of the scanCustomActionForGeneric property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanCustomActionForGeneric() {
        return scanCustomActionForGeneric;
    }

    /**
     * Sets the value of the scanCustomActionForGeneric property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanCustomActionForGeneric(EnumAntiMalwareScanCustomAction value) {
        this.scanCustomActionForGeneric = value;
    }

    /**
     * Gets the value of the unScannableFileAction property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getUnScannableFileAction() {
        return unScannableFileAction;
    }

    /**
     * Sets the value of the unScannableFileAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setUnScannableFileAction(EnumAntiMalwareScanCustomAction value) {
        this.unScannableFileAction = value;
    }

    /**
     * Gets the value of the configurationType property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareConfigType }
     *     
     */
    public EnumAntiMalwareConfigType getConfigurationType() {
        return configurationType;
    }

    /**
     * Sets the value of the configurationType property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareConfigType }
     *     
     */
    public void setConfigurationType(EnumAntiMalwareConfigType value) {
        this.configurationType = value;
    }

    /**
     * Gets the value of the scanNetworkFolder property.
     * 
     */
    public boolean isScanNetworkFolder() {
        return scanNetworkFolder;
    }

    /**
     * Sets the value of the scanNetworkFolder property.
     * 
     */
    public void setScanNetworkFolder(boolean value) {
        this.scanNetworkFolder = value;
    }

    /**
     * Gets the value of the cpuUsage property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareCpuUsage }
     *     
     */
    public EnumAntiMalwareCpuUsage getCpuUsage() {
        return cpuUsage;
    }

    /**
     * Sets the value of the cpuUsage property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareCpuUsage }
     *     
     */
    public void setCpuUsage(EnumAntiMalwareCpuUsage value) {
        this.cpuUsage = value;
    }

    /**
     * Gets the value of the scanOLE property.
     * 
     */
    public boolean isScanOLE() {
        return scanOLE;
    }

    /**
     * Sets the value of the scanOLE property.
     * 
     */
    public void setScanOLE(boolean value) {
        this.scanOLE = value;
    }

    /**
     * Gets the value of the scanOLEExploit property.
     * 
     */
    public boolean isScanOLEExploit() {
        return scanOLEExploit;
    }

    /**
     * Sets the value of the scanOLEExploit property.
     * 
     */
    public void setScanOLEExploit(boolean value) {
        this.scanOLEExploit = value;
    }

    /**
     * Gets the value of the scanOLELayer property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getScanOLELayer() {
        return scanOLELayer;
    }

    /**
     * Sets the value of the scanOLELayer property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setScanOLELayer(Integer value) {
        this.scanOLELayer = value;
    }

    /**
     * Gets the value of the scanActionForVirus property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanActionForVirus() {
        return scanActionForVirus;
    }

    /**
     * Sets the value of the scanActionForVirus property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanActionForVirus(EnumAntiMalwareScanCustomAction value) {
        this.scanActionForVirus = value;
    }

    /**
     * Gets the value of the scanActionForTrojans property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanActionForTrojans() {
        return scanActionForTrojans;
    }

    /**
     * Sets the value of the scanActionForTrojans property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanActionForTrojans(EnumAntiMalwareScanCustomAction value) {
        this.scanActionForTrojans = value;
    }

    /**
     * Gets the value of the scanActionForPacker property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanActionForPacker() {
        return scanActionForPacker;
    }

    /**
     * Sets the value of the scanActionForPacker property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanActionForPacker(EnumAntiMalwareScanCustomAction value) {
        this.scanActionForPacker = value;
    }

    /**
     * Gets the value of the scanActionForSpyware property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanActionForSpyware() {
        return scanActionForSpyware;
    }

    /**
     * Sets the value of the scanActionForSpyware property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanActionForSpyware(EnumAntiMalwareScanCustomAction value) {
        this.scanActionForSpyware = value;
    }

    /**
     * Gets the value of the scanActionForOtherThreats property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanActionForOtherThreats() {
        return scanActionForOtherThreats;
    }

    /**
     * Sets the value of the scanActionForOtherThreats property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanActionForOtherThreats(EnumAntiMalwareScanCustomAction value) {
        this.scanActionForOtherThreats = value;
    }

    /**
     * Gets the value of the scanActionForCookie property.
     * 
     * @return
     *     possible object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public EnumAntiMalwareScanCustomAction getScanActionForCookie() {
        return scanActionForCookie;
    }

    /**
     * Sets the value of the scanActionForCookie property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnumAntiMalwareScanCustomAction }
     *     
     */
    public void setScanActionForCookie(EnumAntiMalwareScanCustomAction value) {
        this.scanActionForCookie = value;
    }

    /**
     * Gets the value of the excludeScanProcessFileListID property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getExcludeScanProcessFileListID() {
        return excludeScanProcessFileListID;
    }

    /**
     * Sets the value of the excludeScanProcessFileListID property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setExcludeScanProcessFileListID(Integer value) {
        this.excludeScanProcessFileListID = value;
    }

}
